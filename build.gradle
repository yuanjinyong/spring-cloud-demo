/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/tutorial_java_projects.html
 */
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    project.ext.envs = ['dev', 'verify', 'test', 'mirror', 'product']
    if (!project.hasProperty('env')) {
        project.ext.env = 'dev'
    }
    if (project.envs.contains(project.env)) {
        logger.lifecycle "构建目标环境为：${project.env}。"
    } else {
        throw new Exception("目标环境“${project.env}”不支持，请指定正确的目标环境：${project.ext.envs}。")
    }


    if (!project.hasProperty('versionNumber')) {
        project.ext.versionNumber = '0.1.0' // 如果从外面传入版本号，则用外面的。
    }

    ext {
        versionType = project.env == 'product' ? 'release' : 'snapshot' // 构建类型
        gradleDir = new File(rootProject.projectDir, 'gradle') // gradle目录
        nexusUsername = "deployment"
        nexusPassword = "Zhuku@deployment"
        nexusUrl = "http://121.43.163.28:28080/nexus"

        springBootVersion = '1.5.9.RELEASE'
        springCloudVersion = 'Edgware.RELEASE'
    }

    configurations.all {
        // 每次都检查是否有更新的快照版本
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}
plugins {
  id "org.springframework.boot" version "1.5.9.RELEASE" apply false
  id "io.spring.dependency-management" version "1.0.3.RELEASE" apply false
  id "com.bmuschko.nexus" version "2.3.1" apply false
}


description = 'Spring Cloud Demo'


allprojects {
    group = "com.demo"
    version = "${versionNumber}${versionType == 'release' ? '' : '-SNAPSHOT'}"


    apply plugin: 'eclipse'
    apply from: "${gradleDir}/eclipse.gradle"
    apply from: "${gradleDir}/maven.gradle"
}


// 这里只对最底层的子工程进行通用配置
configure(subprojects.findAll{!it.childProjects}) { project ->
    apply plugin: 'java'
    apply from: "${gradleDir}/java.gradle"
    apply plugin: 'maven'
    apply plugin: 'com.bmuschko.nexus'
    apply from: "${gradleDir}/nexus.gradle"
    apply plugin: 'org.springframework.boot'
    apply from: "${gradleDir}/spring-boot.gradle"
    apply plugin: 'io.spring.dependency-management'


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-logging')
    }
}
